/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const DashboardNotesIndexLazyImport = createFileRoute('/_dashboard/notes/')()
const DashboardDashboardIndexLazyImport = createFileRoute(
  '/_dashboard/dashboard/',
)()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardNotesIndexLazyRoute = DashboardNotesIndexLazyImport.update({
  path: '/notes/',
  getParentRoute: () => DashboardRoute,
} as any).lazy(() =>
  import('./routes/_dashboard/notes/index.lazy').then((d) => d.Route),
)

const DashboardDashboardIndexLazyRoute =
  DashboardDashboardIndexLazyImport.update({
    path: '/dashboard/',
    getParentRoute: () => DashboardRoute,
  } as any).lazy(() =>
    import('./routes/_dashboard/dashboard/index.lazy').then((d) => d.Route),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/dashboard/': {
      id: '/_dashboard/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardDashboardIndexLazyImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/notes/': {
      id: '/_dashboard/notes/'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof DashboardNotesIndexLazyImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  DashboardRoute: DashboardRoute.addChildren({
    DashboardDashboardIndexLazyRoute,
    DashboardNotesIndexLazyRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_dashboard"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/dashboard/",
        "/_dashboard/notes/"
      ]
    },
    "/_dashboard/dashboard/": {
      "filePath": "_dashboard/dashboard/index.lazy.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/notes/": {
      "filePath": "_dashboard/notes/index.lazy.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
