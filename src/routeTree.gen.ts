/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as protectedProtectedImport } from './routes/(protected)/_protected'
import { Route as authSignupIndexImport } from './routes/(auth)/signup/index'
import { Route as authSigninIndexImport } from './routes/(auth)/signin/index'
import { Route as protectedProtecteddashboardDashboardImport } from './routes/(protected)/_protected/(dashboard)/_dashboard'
import { Route as protectedProtectedNotesEditNoteIdIndexImport } from './routes/(protected)/_protected/notes/edit/$noteId/index'
import { Route as protectedProtectedFlashcardsReviewFlashcardIdIndexImport } from './routes/(protected)/_protected/flashcards/review/$flashcardId/index'
import { Route as protectedProtectedFlashcardsEditFlashcardIdIndexImport } from './routes/(protected)/_protected/flashcards/edit/$flashcardId/index'
import { Route as protectedProtecteddashboardDashboardNotesIndexImport } from './routes/(protected)/_protected/(dashboard)/_dashboard/notes/index'
import { Route as protectedProtecteddashboardDashboardFlashcardsIndexImport } from './routes/(protected)/_protected/(dashboard)/_dashboard/flashcards/index'

// Create Virtual Routes

const protectedImport = createFileRoute('/(protected)')()
const IndexLazyImport = createFileRoute('/')()
const protectedProtecteddashboardImport = createFileRoute(
  '/(protected)/_protected/(dashboard)',
)()
const protectedProtectedNotesNewIndexLazyImport = createFileRoute(
  '/(protected)/_protected/notes/new/',
)()
const protectedProtectedFlashcardsNewIndexLazyImport = createFileRoute(
  '/(protected)/_protected/flashcards/new/',
)()
const protectedProtecteddashboardDashboardSettingsIndexLazyImport =
  createFileRoute('/(protected)/_protected/(dashboard)/_dashboard/settings/')()
const protectedProtecteddashboardDashboardHomeIndexLazyImport = createFileRoute(
  '/(protected)/_protected/(dashboard)/_dashboard/home/',
)()
const protectedProtecteddashboardDashboardAiIndexLazyImport = createFileRoute(
  '/(protected)/_protected/(dashboard)/_dashboard/ai/',
)()

// Create/Update Routes

const protectedRoute = protectedImport.update({
  id: '/(protected)',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const protectedProtectedRoute = protectedProtectedImport.update({
  id: '/_protected',
  getParentRoute: () => protectedRoute,
} as any)

const protectedProtecteddashboardRoute =
  protectedProtecteddashboardImport.update({
    id: '/(dashboard)',
    getParentRoute: () => protectedProtectedRoute,
  } as any)

const authSignupIndexRoute = authSignupIndexImport.update({
  id: '/(auth)/signup/',
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any)

const authSigninIndexRoute = authSigninIndexImport.update({
  id: '/(auth)/signin/',
  path: '/signin/',
  getParentRoute: () => rootRoute,
} as any)

const protectedProtecteddashboardDashboardRoute =
  protectedProtecteddashboardDashboardImport.update({
    id: '/_dashboard',
    getParentRoute: () => protectedProtecteddashboardRoute,
  } as any)

const protectedProtectedNotesNewIndexLazyRoute =
  protectedProtectedNotesNewIndexLazyImport
    .update({
      id: '/notes/new/',
      path: '/notes/new/',
      getParentRoute: () => protectedProtectedRoute,
    } as any)
    .lazy(() =>
      import('./routes/(protected)/_protected/notes/new/index.lazy').then(
        (d) => d.Route,
      ),
    )

const protectedProtectedFlashcardsNewIndexLazyRoute =
  protectedProtectedFlashcardsNewIndexLazyImport
    .update({
      id: '/flashcards/new/',
      path: '/flashcards/new/',
      getParentRoute: () => protectedProtectedRoute,
    } as any)
    .lazy(() =>
      import('./routes/(protected)/_protected/flashcards/new/index.lazy').then(
        (d) => d.Route,
      ),
    )

const protectedProtecteddashboardDashboardSettingsIndexLazyRoute =
  protectedProtecteddashboardDashboardSettingsIndexLazyImport
    .update({
      id: '/settings/',
      path: '/settings/',
      getParentRoute: () => protectedProtecteddashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import(
        './routes/(protected)/_protected/(dashboard)/_dashboard/settings/index.lazy'
      ).then((d) => d.Route),
    )

const protectedProtecteddashboardDashboardHomeIndexLazyRoute =
  protectedProtecteddashboardDashboardHomeIndexLazyImport
    .update({
      id: '/home/',
      path: '/home/',
      getParentRoute: () => protectedProtecteddashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import(
        './routes/(protected)/_protected/(dashboard)/_dashboard/home/index.lazy'
      ).then((d) => d.Route),
    )

const protectedProtecteddashboardDashboardAiIndexLazyRoute =
  protectedProtecteddashboardDashboardAiIndexLazyImport
    .update({
      id: '/ai/',
      path: '/ai/',
      getParentRoute: () => protectedProtecteddashboardDashboardRoute,
    } as any)
    .lazy(() =>
      import(
        './routes/(protected)/_protected/(dashboard)/_dashboard/ai/index.lazy'
      ).then((d) => d.Route),
    )

const protectedProtectedNotesEditNoteIdIndexRoute =
  protectedProtectedNotesEditNoteIdIndexImport.update({
    id: '/notes/edit/$noteId/',
    path: '/notes/edit/$noteId/',
    getParentRoute: () => protectedProtectedRoute,
  } as any)

const protectedProtectedFlashcardsReviewFlashcardIdIndexRoute =
  protectedProtectedFlashcardsReviewFlashcardIdIndexImport.update({
    id: '/flashcards/review/$flashcardId/',
    path: '/flashcards/review/$flashcardId/',
    getParentRoute: () => protectedProtectedRoute,
  } as any)

const protectedProtectedFlashcardsEditFlashcardIdIndexRoute =
  protectedProtectedFlashcardsEditFlashcardIdIndexImport.update({
    id: '/flashcards/edit/$flashcardId/',
    path: '/flashcards/edit/$flashcardId/',
    getParentRoute: () => protectedProtectedRoute,
  } as any)

const protectedProtecteddashboardDashboardNotesIndexRoute =
  protectedProtecteddashboardDashboardNotesIndexImport.update({
    id: '/notes/',
    path: '/notes/',
    getParentRoute: () => protectedProtecteddashboardDashboardRoute,
  } as any)

const protectedProtecteddashboardDashboardFlashcardsIndexRoute =
  protectedProtecteddashboardDashboardFlashcardsIndexImport.update({
    id: '/flashcards/',
    path: '/flashcards/',
    getParentRoute: () => protectedProtecteddashboardDashboardRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/(protected)': {
      id: '/(protected)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/_protected': {
      id: '/(protected)/_protected'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedProtectedImport
      parentRoute: typeof protectedRoute
    }
    '/(auth)/signin/': {
      id: '/(auth)/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signup/': {
      id: '/(auth)/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupIndexImport
      parentRoute: typeof rootRoute
    }
    '/(protected)/_protected/(dashboard)': {
      id: '/(protected)/_protected/(dashboard)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedProtecteddashboardImport
      parentRoute: typeof protectedProtectedImport
    }
    '/(protected)/_protected/(dashboard)/_dashboard': {
      id: '/(protected)/_protected/(dashboard)/_dashboard'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof protectedProtecteddashboardDashboardImport
      parentRoute: typeof protectedProtecteddashboardRoute
    }
    '/(protected)/_protected/flashcards/new/': {
      id: '/(protected)/_protected/flashcards/new/'
      path: '/flashcards/new'
      fullPath: '/flashcards/new'
      preLoaderRoute: typeof protectedProtectedFlashcardsNewIndexLazyImport
      parentRoute: typeof protectedProtectedImport
    }
    '/(protected)/_protected/notes/new/': {
      id: '/(protected)/_protected/notes/new/'
      path: '/notes/new'
      fullPath: '/notes/new'
      preLoaderRoute: typeof protectedProtectedNotesNewIndexLazyImport
      parentRoute: typeof protectedProtectedImport
    }
    '/(protected)/_protected/(dashboard)/_dashboard/flashcards/': {
      id: '/(protected)/_protected/(dashboard)/_dashboard/flashcards/'
      path: '/flashcards'
      fullPath: '/flashcards'
      preLoaderRoute: typeof protectedProtecteddashboardDashboardFlashcardsIndexImport
      parentRoute: typeof protectedProtecteddashboardDashboardImport
    }
    '/(protected)/_protected/(dashboard)/_dashboard/notes/': {
      id: '/(protected)/_protected/(dashboard)/_dashboard/notes/'
      path: '/notes'
      fullPath: '/notes'
      preLoaderRoute: typeof protectedProtecteddashboardDashboardNotesIndexImport
      parentRoute: typeof protectedProtecteddashboardDashboardImport
    }
    '/(protected)/_protected/flashcards/edit/$flashcardId/': {
      id: '/(protected)/_protected/flashcards/edit/$flashcardId/'
      path: '/flashcards/edit/$flashcardId'
      fullPath: '/flashcards/edit/$flashcardId'
      preLoaderRoute: typeof protectedProtectedFlashcardsEditFlashcardIdIndexImport
      parentRoute: typeof protectedProtectedImport
    }
    '/(protected)/_protected/flashcards/review/$flashcardId/': {
      id: '/(protected)/_protected/flashcards/review/$flashcardId/'
      path: '/flashcards/review/$flashcardId'
      fullPath: '/flashcards/review/$flashcardId'
      preLoaderRoute: typeof protectedProtectedFlashcardsReviewFlashcardIdIndexImport
      parentRoute: typeof protectedProtectedImport
    }
    '/(protected)/_protected/notes/edit/$noteId/': {
      id: '/(protected)/_protected/notes/edit/$noteId/'
      path: '/notes/edit/$noteId'
      fullPath: '/notes/edit/$noteId'
      preLoaderRoute: typeof protectedProtectedNotesEditNoteIdIndexImport
      parentRoute: typeof protectedProtectedImport
    }
    '/(protected)/_protected/(dashboard)/_dashboard/ai/': {
      id: '/(protected)/_protected/(dashboard)/_dashboard/ai/'
      path: '/ai'
      fullPath: '/ai'
      preLoaderRoute: typeof protectedProtecteddashboardDashboardAiIndexLazyImport
      parentRoute: typeof protectedProtecteddashboardDashboardImport
    }
    '/(protected)/_protected/(dashboard)/_dashboard/home/': {
      id: '/(protected)/_protected/(dashboard)/_dashboard/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof protectedProtecteddashboardDashboardHomeIndexLazyImport
      parentRoute: typeof protectedProtecteddashboardDashboardImport
    }
    '/(protected)/_protected/(dashboard)/_dashboard/settings/': {
      id: '/(protected)/_protected/(dashboard)/_dashboard/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof protectedProtecteddashboardDashboardSettingsIndexLazyImport
      parentRoute: typeof protectedProtecteddashboardDashboardImport
    }
  }
}

// Create and export the route tree

interface protectedProtecteddashboardDashboardRouteChildren {
  protectedProtecteddashboardDashboardFlashcardsIndexRoute: typeof protectedProtecteddashboardDashboardFlashcardsIndexRoute
  protectedProtecteddashboardDashboardNotesIndexRoute: typeof protectedProtecteddashboardDashboardNotesIndexRoute
  protectedProtecteddashboardDashboardAiIndexLazyRoute: typeof protectedProtecteddashboardDashboardAiIndexLazyRoute
  protectedProtecteddashboardDashboardHomeIndexLazyRoute: typeof protectedProtecteddashboardDashboardHomeIndexLazyRoute
  protectedProtecteddashboardDashboardSettingsIndexLazyRoute: typeof protectedProtecteddashboardDashboardSettingsIndexLazyRoute
}

const protectedProtecteddashboardDashboardRouteChildren: protectedProtecteddashboardDashboardRouteChildren =
  {
    protectedProtecteddashboardDashboardFlashcardsIndexRoute:
      protectedProtecteddashboardDashboardFlashcardsIndexRoute,
    protectedProtecteddashboardDashboardNotesIndexRoute:
      protectedProtecteddashboardDashboardNotesIndexRoute,
    protectedProtecteddashboardDashboardAiIndexLazyRoute:
      protectedProtecteddashboardDashboardAiIndexLazyRoute,
    protectedProtecteddashboardDashboardHomeIndexLazyRoute:
      protectedProtecteddashboardDashboardHomeIndexLazyRoute,
    protectedProtecteddashboardDashboardSettingsIndexLazyRoute:
      protectedProtecteddashboardDashboardSettingsIndexLazyRoute,
  }

const protectedProtecteddashboardDashboardRouteWithChildren =
  protectedProtecteddashboardDashboardRoute._addFileChildren(
    protectedProtecteddashboardDashboardRouteChildren,
  )

interface protectedProtecteddashboardRouteChildren {
  protectedProtecteddashboardDashboardRoute: typeof protectedProtecteddashboardDashboardRouteWithChildren
}

const protectedProtecteddashboardRouteChildren: protectedProtecteddashboardRouteChildren =
  {
    protectedProtecteddashboardDashboardRoute:
      protectedProtecteddashboardDashboardRouteWithChildren,
  }

const protectedProtecteddashboardRouteWithChildren =
  protectedProtecteddashboardRoute._addFileChildren(
    protectedProtecteddashboardRouteChildren,
  )

interface protectedProtectedRouteChildren {
  protectedProtecteddashboardRoute: typeof protectedProtecteddashboardRouteWithChildren
  protectedProtectedFlashcardsNewIndexLazyRoute: typeof protectedProtectedFlashcardsNewIndexLazyRoute
  protectedProtectedNotesNewIndexLazyRoute: typeof protectedProtectedNotesNewIndexLazyRoute
  protectedProtectedFlashcardsEditFlashcardIdIndexRoute: typeof protectedProtectedFlashcardsEditFlashcardIdIndexRoute
  protectedProtectedFlashcardsReviewFlashcardIdIndexRoute: typeof protectedProtectedFlashcardsReviewFlashcardIdIndexRoute
  protectedProtectedNotesEditNoteIdIndexRoute: typeof protectedProtectedNotesEditNoteIdIndexRoute
}

const protectedProtectedRouteChildren: protectedProtectedRouteChildren = {
  protectedProtecteddashboardRoute:
    protectedProtecteddashboardRouteWithChildren,
  protectedProtectedFlashcardsNewIndexLazyRoute:
    protectedProtectedFlashcardsNewIndexLazyRoute,
  protectedProtectedNotesNewIndexLazyRoute:
    protectedProtectedNotesNewIndexLazyRoute,
  protectedProtectedFlashcardsEditFlashcardIdIndexRoute:
    protectedProtectedFlashcardsEditFlashcardIdIndexRoute,
  protectedProtectedFlashcardsReviewFlashcardIdIndexRoute:
    protectedProtectedFlashcardsReviewFlashcardIdIndexRoute,
  protectedProtectedNotesEditNoteIdIndexRoute:
    protectedProtectedNotesEditNoteIdIndexRoute,
}

const protectedProtectedRouteWithChildren =
  protectedProtectedRoute._addFileChildren(protectedProtectedRouteChildren)

interface protectedRouteChildren {
  protectedProtectedRoute: typeof protectedProtectedRouteWithChildren
}

const protectedRouteChildren: protectedRouteChildren = {
  protectedProtectedRoute: protectedProtectedRouteWithChildren,
}

const protectedRouteWithChildren = protectedRoute._addFileChildren(
  protectedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof protectedProtecteddashboardDashboardRouteWithChildren
  '/signin': typeof authSigninIndexRoute
  '/signup': typeof authSignupIndexRoute
  '/flashcards/new': typeof protectedProtectedFlashcardsNewIndexLazyRoute
  '/notes/new': typeof protectedProtectedNotesNewIndexLazyRoute
  '/flashcards': typeof protectedProtecteddashboardDashboardFlashcardsIndexRoute
  '/notes': typeof protectedProtecteddashboardDashboardNotesIndexRoute
  '/flashcards/edit/$flashcardId': typeof protectedProtectedFlashcardsEditFlashcardIdIndexRoute
  '/flashcards/review/$flashcardId': typeof protectedProtectedFlashcardsReviewFlashcardIdIndexRoute
  '/notes/edit/$noteId': typeof protectedProtectedNotesEditNoteIdIndexRoute
  '/ai': typeof protectedProtecteddashboardDashboardAiIndexLazyRoute
  '/home': typeof protectedProtecteddashboardDashboardHomeIndexLazyRoute
  '/settings': typeof protectedProtecteddashboardDashboardSettingsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof protectedProtecteddashboardDashboardRouteWithChildren
  '/signin': typeof authSigninIndexRoute
  '/signup': typeof authSignupIndexRoute
  '/flashcards/new': typeof protectedProtectedFlashcardsNewIndexLazyRoute
  '/notes/new': typeof protectedProtectedNotesNewIndexLazyRoute
  '/flashcards': typeof protectedProtecteddashboardDashboardFlashcardsIndexRoute
  '/notes': typeof protectedProtecteddashboardDashboardNotesIndexRoute
  '/flashcards/edit/$flashcardId': typeof protectedProtectedFlashcardsEditFlashcardIdIndexRoute
  '/flashcards/review/$flashcardId': typeof protectedProtectedFlashcardsReviewFlashcardIdIndexRoute
  '/notes/edit/$noteId': typeof protectedProtectedNotesEditNoteIdIndexRoute
  '/ai': typeof protectedProtecteddashboardDashboardAiIndexLazyRoute
  '/home': typeof protectedProtecteddashboardDashboardHomeIndexLazyRoute
  '/settings': typeof protectedProtecteddashboardDashboardSettingsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/(protected)': typeof protectedRouteWithChildren
  '/(protected)/_protected': typeof protectedProtectedRouteWithChildren
  '/(auth)/signin/': typeof authSigninIndexRoute
  '/(auth)/signup/': typeof authSignupIndexRoute
  '/(protected)/_protected/(dashboard)': typeof protectedProtecteddashboardRouteWithChildren
  '/(protected)/_protected/(dashboard)/_dashboard': typeof protectedProtecteddashboardDashboardRouteWithChildren
  '/(protected)/_protected/flashcards/new/': typeof protectedProtectedFlashcardsNewIndexLazyRoute
  '/(protected)/_protected/notes/new/': typeof protectedProtectedNotesNewIndexLazyRoute
  '/(protected)/_protected/(dashboard)/_dashboard/flashcards/': typeof protectedProtecteddashboardDashboardFlashcardsIndexRoute
  '/(protected)/_protected/(dashboard)/_dashboard/notes/': typeof protectedProtecteddashboardDashboardNotesIndexRoute
  '/(protected)/_protected/flashcards/edit/$flashcardId/': typeof protectedProtectedFlashcardsEditFlashcardIdIndexRoute
  '/(protected)/_protected/flashcards/review/$flashcardId/': typeof protectedProtectedFlashcardsReviewFlashcardIdIndexRoute
  '/(protected)/_protected/notes/edit/$noteId/': typeof protectedProtectedNotesEditNoteIdIndexRoute
  '/(protected)/_protected/(dashboard)/_dashboard/ai/': typeof protectedProtecteddashboardDashboardAiIndexLazyRoute
  '/(protected)/_protected/(dashboard)/_dashboard/home/': typeof protectedProtecteddashboardDashboardHomeIndexLazyRoute
  '/(protected)/_protected/(dashboard)/_dashboard/settings/': typeof protectedProtecteddashboardDashboardSettingsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/signup'
    | '/flashcards/new'
    | '/notes/new'
    | '/flashcards'
    | '/notes'
    | '/flashcards/edit/$flashcardId'
    | '/flashcards/review/$flashcardId'
    | '/notes/edit/$noteId'
    | '/ai'
    | '/home'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signup'
    | '/flashcards/new'
    | '/notes/new'
    | '/flashcards'
    | '/notes'
    | '/flashcards/edit/$flashcardId'
    | '/flashcards/review/$flashcardId'
    | '/notes/edit/$noteId'
    | '/ai'
    | '/home'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/(protected)'
    | '/(protected)/_protected'
    | '/(auth)/signin/'
    | '/(auth)/signup/'
    | '/(protected)/_protected/(dashboard)'
    | '/(protected)/_protected/(dashboard)/_dashboard'
    | '/(protected)/_protected/flashcards/new/'
    | '/(protected)/_protected/notes/new/'
    | '/(protected)/_protected/(dashboard)/_dashboard/flashcards/'
    | '/(protected)/_protected/(dashboard)/_dashboard/notes/'
    | '/(protected)/_protected/flashcards/edit/$flashcardId/'
    | '/(protected)/_protected/flashcards/review/$flashcardId/'
    | '/(protected)/_protected/notes/edit/$noteId/'
    | '/(protected)/_protected/(dashboard)/_dashboard/ai/'
    | '/(protected)/_protected/(dashboard)/_dashboard/home/'
    | '/(protected)/_protected/(dashboard)/_dashboard/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  protectedRoute: typeof protectedRouteWithChildren
  authSigninIndexRoute: typeof authSigninIndexRoute
  authSignupIndexRoute: typeof authSignupIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  protectedRoute: protectedRouteWithChildren,
  authSigninIndexRoute: authSigninIndexRoute,
  authSignupIndexRoute: authSignupIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(protected)",
        "/(auth)/signin/",
        "/(auth)/signup/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/(protected)": {
      "filePath": "(protected)",
      "children": [
        "/(protected)/_protected"
      ]
    },
    "/(protected)/_protected": {
      "filePath": "(protected)/_protected.tsx",
      "parent": "/(protected)",
      "children": [
        "/(protected)/_protected/(dashboard)",
        "/(protected)/_protected/flashcards/new/",
        "/(protected)/_protected/notes/new/",
        "/(protected)/_protected/flashcards/edit/$flashcardId/",
        "/(protected)/_protected/flashcards/review/$flashcardId/",
        "/(protected)/_protected/notes/edit/$noteId/"
      ]
    },
    "/(auth)/signin/": {
      "filePath": "(auth)/signin/index.tsx"
    },
    "/(auth)/signup/": {
      "filePath": "(auth)/signup/index.tsx"
    },
    "/(protected)/_protected/(dashboard)": {
      "filePath": "(protected)/_protected/(dashboard)",
      "parent": "/(protected)/_protected",
      "children": [
        "/(protected)/_protected/(dashboard)/_dashboard"
      ]
    },
    "/(protected)/_protected/(dashboard)/_dashboard": {
      "filePath": "(protected)/_protected/(dashboard)/_dashboard.tsx",
      "parent": "/(protected)/_protected/(dashboard)",
      "children": [
        "/(protected)/_protected/(dashboard)/_dashboard/flashcards/",
        "/(protected)/_protected/(dashboard)/_dashboard/notes/",
        "/(protected)/_protected/(dashboard)/_dashboard/ai/",
        "/(protected)/_protected/(dashboard)/_dashboard/home/",
        "/(protected)/_protected/(dashboard)/_dashboard/settings/"
      ]
    },
    "/(protected)/_protected/flashcards/new/": {
      "filePath": "(protected)/_protected/flashcards/new/index.lazy.tsx",
      "parent": "/(protected)/_protected"
    },
    "/(protected)/_protected/notes/new/": {
      "filePath": "(protected)/_protected/notes/new/index.lazy.tsx",
      "parent": "/(protected)/_protected"
    },
    "/(protected)/_protected/(dashboard)/_dashboard/flashcards/": {
      "filePath": "(protected)/_protected/(dashboard)/_dashboard/flashcards/index.tsx",
      "parent": "/(protected)/_protected/(dashboard)/_dashboard"
    },
    "/(protected)/_protected/(dashboard)/_dashboard/notes/": {
      "filePath": "(protected)/_protected/(dashboard)/_dashboard/notes/index.tsx",
      "parent": "/(protected)/_protected/(dashboard)/_dashboard"
    },
    "/(protected)/_protected/flashcards/edit/$flashcardId/": {
      "filePath": "(protected)/_protected/flashcards/edit/$flashcardId/index.tsx",
      "parent": "/(protected)/_protected"
    },
    "/(protected)/_protected/flashcards/review/$flashcardId/": {
      "filePath": "(protected)/_protected/flashcards/review/$flashcardId/index.tsx",
      "parent": "/(protected)/_protected"
    },
    "/(protected)/_protected/notes/edit/$noteId/": {
      "filePath": "(protected)/_protected/notes/edit/$noteId/index.tsx",
      "parent": "/(protected)/_protected"
    },
    "/(protected)/_protected/(dashboard)/_dashboard/ai/": {
      "filePath": "(protected)/_protected/(dashboard)/_dashboard/ai/index.lazy.tsx",
      "parent": "/(protected)/_protected/(dashboard)/_dashboard"
    },
    "/(protected)/_protected/(dashboard)/_dashboard/home/": {
      "filePath": "(protected)/_protected/(dashboard)/_dashboard/home/index.lazy.tsx",
      "parent": "/(protected)/_protected/(dashboard)/_dashboard"
    },
    "/(protected)/_protected/(dashboard)/_dashboard/settings/": {
      "filePath": "(protected)/_protected/(dashboard)/_dashboard/settings/index.lazy.tsx",
      "parent": "/(protected)/_protected/(dashboard)/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
